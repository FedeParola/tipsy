#+LaTeX_HEADER:\usepackage[margin=2cm]{geometry}
#+LaTeX_HEADER:\usepackage{enumitem}
#+LaTeX_HEADER:\usepackage{tikz}
#+LATEX:\setitemize{noitemsep,topsep=0pt,parsep=0pt,partopsep=0pt}
#+LATEX:\lstdefinelanguage{javascript}{basicstyle=\scriptsize\ttfamily,numbers=left,numberstyle=\scriptsize,stepnumber=1,showstringspaces=false,breaklines=true,frame=lines}
#+OPTIONS: toc:nil author:t ^:nil num:nil

#+TITLE: L2 Port Forwarding (PORTfwd)
#+AUTHOR: Tamás Lévai, Felicián Németh, Gábor Rétvári (BME)

The port-forwarder pipeline (name: =portfwd=) is a basic L2 setup that
allows to exercise the raw speed of the underlying data plane
technology. The port forwarding use case passes L2 packets between the
uplink and the downlink port, optionally swapping MAC source addresses
along the way.

* Static pipeline

In the upstream direction the pipeline will receive L2 packets from the
downlink port of the SUT and forward them to the uplink port. Meanwhile, it
may optionally rewrite the source MAC address in the L2 frame to the MAC
address of the uplink port (must be specified by the pipeline config).  The
downstream direction is the same, but packets are received from the uplink
port and forwarded to the downlink port after an optional MAC rewrite.

* Dynamic scenarios

The port forwarding pipeline does not define dynamic scenarios.

* Pipeline configuration

A sample TIPSY configuration for the PORTfwd pipeline is shown below:

#+BEGIN_SRC javascript
{
    "pipeline": {
         "name": "portfwd",
         "mac-swap-upstream": null,
         "mac-swap-downstream": "ac:dc:aa:bb:bb:aa"
    }
}
#+END_SRC

The parameters specific to the MGW pipeline are as follows:

- =name=: name of the pipeline, must be set to =portfwd= for the Port
  Forward pipeline
- =mac-swap-upstream=: if set, swap the source MAC address in the packets
  received from the downlink port before forwarding to the uplink port
- =mac-swap-downstream=: if set, swap the source MAC address in the packets
  received from the uplink port before forwarding to the downlink port

* OVS Implementation: Caveats and considerations

* BESS Implementation: Caveats and considerations


